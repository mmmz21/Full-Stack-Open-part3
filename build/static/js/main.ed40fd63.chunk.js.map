{"version":3,"sources":["components/Form.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Form","addInfo","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","initialPersons","console","log","Notification","error_message","success_message","className","FilterAndDisplay","person","name","toLowerCase","includes","map","key","number","onClick","window","confirm","location","reload","setTimeout","catch","error","event","target","existingId","preventDefault","length","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed40fd63.chunk.js","sourcesContent":["import React from 'react'\nconst Form = ({ addInfo, newName, handleNameChange, newNumber, handleNumberChange }) => {\n    return (\n        <div>\n            <form onSubmit={addInfo}>\n                <div>\n                    name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div >\n    )\n}\nexport default Form\n","import React from 'react'\nconst Filter = ({ filter, handleFilterChange }) => {\n    return (\n        <div>\n            <p>filter shown with a < input value={filter} onChange={handleFilterChange} /></p>\n        </div>\n    )\n}\nexport default Filter","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\nconst deleteEntry = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport FilterAndDisplay from './components/FilterAndDisplay'\nimport personService from './services/persons'\n\n/* this phonebook app contains a form which allows the user to search, add, delete, and update their contact list.\n   This is handled using controlled components*/\nconst App = () => {\n  // event handlers and states stay in the main App function\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const Notification = ({ error_message, success_message }) => {\n    if (errorMessage)\n      return <div className=\"error\"> {errorMessage} </div>\n    else if (successMessage)\n      return <div className=\"success\"> {successMessage} </div>\n    return null\n  }\n\n\n  const deleteInfo = (id, name) => {\n    let deleteIf = window.confirm(`Delete ${name}?`)\n    if (deleteIf) {\n      personService\n        .deleteEntry(id)\n        .then(response => {\n          window.location.reload()\n          setSuccessMessage(`${name} was deleted`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`the person ${name} was already deleted from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const updateInfo = (id, name) => {\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .update(id, personObject)\n      .then(response => {\n        setNewName('')\n        setNewNumber('')\n        window.location.reload();\n        setSuccessMessage(`${name} was updated`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`${name} cannot be updated because they have already been deleted from the phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n\n  const addInfo = (event) => {\n    event.preventDefault()\n\n    // Check if name is already in the phonebook \n    let existingId;\n    const same = persons.filter(function (persons) {\n      if (persons.name === newName)\n        existingId = persons.id;\n      return persons.name === newName;\n    })\n\n    if (same.length > 0) {\n      let updateIf = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n      if (updateIf) {\n        updateInfo(existingId, newName)\n      }\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          window.location.reload()\n          setSuccessMessage(`${newName} was added`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setErrorMessage(`${newName} could not be added. Please try again.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const FilterAndDisplay = () => {\n    let filteredList = []\n    if (filter === '')\n      filteredList = persons\n    else {\n      filteredList = persons.filter(function (person) { return person.name.toLowerCase().includes(filter.toLowerCase()) })\n    }\n    return filteredList.map(function (person) {\n      return <div key={person.id}> {person.name} {person.number}\n        <button onClick={() => deleteInfo(person.id, person.name)}> Delete</button></div>\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification errorMessage={errorMessage} successMessage={successMessage} />\n      <div>\n        <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      </div>\n      <h2> Add a new: </h2>\n      <Form addInfo={addInfo} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <div> {<FilterAndDisplay persons={persons} filter={filter} />} </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}