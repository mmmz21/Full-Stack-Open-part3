{"version":3,"sources":["components/Form.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Form","addInfo","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","initialPersons","Notification","className","FilterAndDisplay","person","name","toLowerCase","includes","map","key","number","onClick","window","confirm","location","reload","setTimeout","catch","error","event","target","preventDefault","console","log","length","validator","isMobilePhone","personObject","existingPerson","find","updateInfo","newPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a3eaf0c.chunk.js","sourcesContent":["import React from 'react'\nconst Form = ({ addInfo, newName, handleNameChange, newNumber, handleNumberChange }) => {\n    return (\n        <div>\n            <form onSubmit={addInfo}>\n                <div>\n                    name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div >\n    )\n}\nexport default Form\n","import React from 'react'\nconst Filter = ({ filter, handleFilterChange }) => {\n    return (\n        <div>\n            <p>filter shown with a < input value={filter} onChange={handleFilterChange} /></p>\n        </div>\n    )\n}\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n// This file makes calls to index.js from part3\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\nconst deleteEntry = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\n//import FilterAndDisplay from './components/FilterAndDisplay'\nimport personService from './services/persons'\nimport validator from 'validator'\n\n/* this phonebook app contains a form which allows the user to search, add, delete, and update their contact list.\n   This is handled using controlled components*/\nconst App = () => {\n  // event handlers and states stay in the main App function\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const Notification = ({ errorMessage, successMessage }) => {\n    if (errorMessage)\n      return <div className=\"error\"> {errorMessage} </div>\n    else if (successMessage)\n      return <div className=\"success\"> {successMessage} </div>\n    return null\n  }\n\n\n  const deleteInfo = (id, name) => {\n    let deleteIf = window.confirm(`Delete ${name}?`)\n    if (deleteIf) {\n      personService\n        .deleteEntry(id)\n        .then(response => {\n          window.location.reload()\n          setSuccessMessage(`${name} was deleted`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`the person ${name} was already deleted from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const updateInfo = (id, name, personObject) => {\n    console.log(id);\n    personService\n      .update(id, personObject)\n      .then(response => {\n        setNewName('')\n        setNewNumber('')\n        window.location.reload();\n        setSuccessMessage(`${name} was updated`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`${name} cannot be updated because they have already been deleted from the phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n\n  const addInfo = (event) => {\n    event.preventDefault()\n    console.log(\"here\")\n    // Check if name and phone number exist and are valid\n    if (newName.length < 1) {\n      console.log(\"also here\")\n      setErrorMessage(`Phonebook entries must have a name`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      return\n    }\n\n    if (!validator.isMobilePhone(newNumber)) {\n      setErrorMessage(`Phone number is invalid, please re-enter.`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    // Check if name is already in the phonebook \n    const existingPerson = persons.find(person => person.name === newName)\n\n    console.log(existingPerson);\n    if (existingPerson) {\n      let yesUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n      if (yesUpdate) {\n        updateInfo(existingPerson.id, newName, personObject)\n      }\n    }\n    else {\n\n      personService\n        .create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setNewName('')\n          setNewNumber('')\n          window.location.reload()\n          setSuccessMessage(`${newName} was added`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setErrorMessage(`${newName} could not be added. Please try again.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const FilterAndDisplay = () => {\n    let filteredList = []\n    if (filter === '')\n      filteredList = persons\n    else {\n      filteredList = persons.filter(function (person) { return person.name.toLowerCase().includes(filter.toLowerCase()) })\n    }\n    return filteredList.map(function (person) {\n      return <div key={person.id}> {person.name} {person.number}\n        <button onClick={() => deleteInfo(person.id, person.name)}> Delete</button></div>\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification errorMessage={errorMessage} successMessage={successMessage} />\n      <div>\n        <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      </div>\n      <h2> Add a new: </h2>\n      <Form addInfo={addInfo} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <div> {<FilterAndDisplay persons={persons} filter={filter} />} </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}